openapi: 3.0.3
info:
  title: Knowledge Base
  description: >-
    This API enables users to manage the knowledge base, including creating, reading, updating, and deleting entries within it.


    ## API Functionality
    
     This API allows API clients to perform CRUD operations on the knowledge base hosted on the server.
     
    ## Security and Authentication
    This API uses OAuth 2.0 with OpenID Connect for authentication. The following scopes are required:
    - knowledge-base:create - Create new knowledge bases
    - knowledge-base:read - Read knowledge base entries
    - knowledge-base:update - Update existing knowledge bases
    - knowledge-base:delete - Delete knowledge bases
    - documents:upload - Upload documents to knowledge bases

    # Authorization and authentication
    
    The "Camara Security and Interoperability Profile" provides details of how an API consumer requests an access token. Please refer to Identity and Consent Management (https://github.com/camaraproject/IdentityAndConsentManagement/) for the released version of the profile.
    
    The specific authorization flows to be used will be agreed upon during the onboarding process, happening between the API consumer and the API provider, taking into account the declared purpose for accessing the API, whilst also being subject to the prevailing legal framework dictated by local legislation.
    
    In cases where personal data is processed by the API and users can exercise their rights through mechanisms such as opt-in and/or opt-out, the use of three-legged access tokens is mandatory. This ensures that the API remains in compliance with privacy regulations, upholding the principles of transparency and user-centric privacy-by-design.

    
    # Additional CAMARA error responses

    The list of error codes in this API specification is not exhaustive. Therefore the API specification may not document some non-mandatory error statuses as indicated in `CAMARA API Design Guide`.

    Please refer to the `CAMARA_common.yaml` of the Commonalities Release associated to this API version for a complete list of error responses. The applicable Commonalities Release can be identified in the `API Readiness Checklist` document associated to this API version.

    As a specific rule, error `501 - NOT_IMPLEMENTED` can be only a possible error response if it is explicitly documented in the API.

    
    # Further info and support

    (FAQs will be added in a later version of the documentation)

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0-rc.1
  x-camara-commonalities: 0.6

externalDocs:
  description: Product documentation at CAMARA
  url: https://github.com/camaraproject/ModelAsAService

servers:
  - url: '{apiRoot}/knowledge-base/vwip'
    variables:
      apiRoot:
        default: http://localhost:8080

tags:
  - name: knowledge-base
    description: Knowledge base management

paths:
  /knowledge_bases:
    post:
      summary: Create a new knowledge base
      tags:
        - Knowledge-base
      parameters:
        - $ref: '#/components/parameters/x-correlator'  # Added correlator
      security:
        - openId:
          - knowledge-base:create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseCreateRequest'
      responses:
        '201':
          description: Knowledge base created successfully
          headers:
            x-correlator:
              $ref: '#/components/parameters/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '500':
          $ref: '#/components/responses/Generic500'

    get:
      summary: Get all knowledge bases
      tags:
        - Knowledge-base
      parameters:
        - $ref: '#/components/parameters/x-correlator'  # Added correlator
      security:
        - openId:
          - knowledge-base:read
      responses:
        '200':
          description: List of knowledge bases
          headers:
            x-correlator:
              $ref: '#/components/parameters/x-correlator'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBase'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '500':
          $ref: '#/components/responses/Generic500'

  /knowledge_bases/{knowledgeBaseID}:
    parameters:
      - name: knowledgeBaseID
        in: path
        required: true
        schema:
          type: string
        description: ID of the knowledge base
      - $ref: '#/components/parameters/x-correlator'  # Added correlator

    get:
      summary: Get a specific knowledge base
      tags:
        - Knowledge-base
      security:
        - openId:
          - knowledge-base:read
      responses:
        '200':
          description: Knowledge base details
          headers:
            x-correlator:
              $ref: '#/components/parameters/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'

    put:
      summary: Update a knowledge base
      tags:
        - Knowledge-base
      security:
        - openId:
          - knowledge-base:update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseUpdateRequest'
      responses:
        '200':
          description: Knowledge base updated successfully
          headers:
            x-correlator:
              $ref: '#/components/parameters/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'

    delete:
      summary: Delete a knowledge base
      tags:
        - Knowledge-bases
      security:
        - openId:
          - knowledge-base:delete
      responses:
        '204':
          description: Knowledge base deleted successfully
          headers:
            x-correlator:
              $ref: '#/components/parameters/x-correlator'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'

  /knowledge_bases/{knowledgeBaseID}/documents:
    post:
      summary: Upload a document to a knowledge base
      tags:
        - Documents
      parameters:
        - name: knowledgeBaseID
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/x-correlator'  # Added correlator
      security:
        - openId:
          - knowledge-base:documents:upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  type: string
                  format: binary
              required:
                - document
        required: true
      responses:
        '201':
          description: Document uploaded successfully
          headers:
            x-correlator:
              $ref: '#/components/parameters/x-correlator'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Document uploaded successfully"
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '415':
          $ref: '#/components/responses/Generic415'
        '500':
          $ref: '#/components/responses/Generic500'

components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
      description: OpenID Connect authentication

  parameters:
    x-correlator:
      name: x-correlator
      in: header
      description: Correlation ID for request tracing
      schema:
        $ref: "#/components/schemas/XCorrelator"
  
  headers:
    x-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/XCorrelator"
        
  schemas:
    XCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: "b4333c46-49c0-4f62-80d7-f0ef930f1c46"
      
    KnowledgeBase:
      type: object
      properties:
        knowledgeBaseID:
          type: string
          description: Unique identifier of the knowledge base
        name:
          type: string
          description: Name of the knowledge base
        description:
          type: string
          description: Detailed description of the knowledge base
        documents:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              format:
                type: string
                enum: [doc, pdf, txt, csv]
                description: File format
              uploadDate:
                type: string
                format: date-time
                description: "Upload timestamp. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ"
          description: List of documents in the knowledge base

    KnowledgeBaseCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the knowledge base
        description:
          type: string
          description: Detailed description of the knowledge base

    KnowledgeBaseUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: New name of the knowledge base
        description:
          type: string
          description: New description of the knowledge base

    ErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP status code
        code:
          type: string
          description: Error code identifier
        message:
          type: string
          description: Human-readable error message

  responses:
    Generic400:
      description: Bad request due to invalid input
      headers:
        x-correlator:
          $ref: '#/components/parameters/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_DOCUMENT_FORMAT
                      - MISSING_REQUIRED_PARAM
          examples:
            GENERIC_400_INVALID_DOCUMENT_FORMAT:
              description: Invalid document format
              value:
                status: 400
                code: INVALID_DOCUMENT_FORMAT
                message: "Invalid document format. Supported formats: doc/pdf/txt/csv"
            GENERIC_400_MISSING_REQUIRED_PARAM:
              description: Missing required parameter
              value:
                status: 400
                code: MISSING_REQUIRED_PARAM
                message: "Required parameter 'name' is missing"

    Generic401:
      description: Authentication required
      headers:
        x-correlator:
          $ref: '#/components/parameters/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Authentication credentials missing or invalid
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Authentication credentials missing or invalid

    Generic403:
      description: Insufficient permissions
      headers:
        x-correlator:
          $ref: '#/components/parameters/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: User lacks required permissions
              value:
                status: 403
                code: PERMISSION_DENIED
                message: User lacks required permissions for this operation

    Generic404:
      description: Resource not found
      headers:
        x-correlator:
          $ref: '#/components/parameters/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - KNOWLEDGE_BASE_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_KNOWLEDGE_BASE_NOT_FOUND:
              description: Knowledge base not found
              value:
                status: 404
                code: KNOWLEDGE_BASE_NOT_FOUND
                message: "Specified knowledge base ID does not exist"

    Generic415:
      description: Unsupported media type
      headers:
        x-correlator:
          $ref: '#/components/parameters/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 415
                  code:
                    enum:
                      - UNSUPPORTED_MEDIA_TYPE
          examples:
            GENERIC_415_UNSUPPORTED_MEDIA_TYPE:
              description: Unsupported document format
              value:
                status: 415
                code: UNSUPPORTED_MEDIA_TYPE
                message: "Unsupported document format. Supported formats: doc/pdf/txt/csv"

    Generic500:
      description: Internal server error
      headers:
        x-correlator:
          $ref: '#/components/parameters/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 500
                  code:
                    enum:
                      - INTERNAL_SERVER_ERROR
          examples:
            GENERIC_500_INTERNAL_SERVER_ERROR:
              description: Unexpected server error
              value:
                status: 500
                code: INTERNAL_SERVER_ERROR
                message: "Unexpected server error occurred"
